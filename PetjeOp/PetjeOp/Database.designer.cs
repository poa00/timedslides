#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetjeOp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="kbs2")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAnswer(tblAnswer instance);
    partial void UpdatetblAnswer(tblAnswer instance);
    partial void DeletetblAnswer(tblAnswer instance);
    partial void InserttblTeacher(tblTeacher instance);
    partial void UpdatetblTeacher(tblTeacher instance);
    partial void DeletetblTeacher(tblTeacher instance);
    partial void InserttblLinkAnswer(tblLinkAnswer instance);
    partial void UpdatetblLinkAnswer(tblLinkAnswer instance);
    partial void DeletetblLinkAnswer(tblLinkAnswer instance);
    partial void InserttblQuestion(tblQuestion instance);
    partial void UpdatetblQuestion(tblQuestion instance);
    partial void DeletetblQuestion(tblQuestion instance);
    partial void InserttblQuestionnaire(tblQuestionnaire instance);
    partial void UpdatetblQuestionnaire(tblQuestionnaire instance);
    partial void DeletetblQuestionnaire(tblQuestionnaire instance);
    partial void InserttblResult(tblResult instance);
    partial void UpdatetblResult(tblResult instance);
    partial void DeletetblResult(tblResult instance);
    partial void InserttblStudent(tblStudent instance);
    partial void UpdatetblStudent(tblStudent instance);
    partial void DeletetblStudent(tblStudent instance);
    partial void InserttblExam(tblExam instance);
    partial void UpdatetblExam(tblExam instance);
    partial void DeletetblExam(tblExam instance);
    partial void InserttblLinkQuestion(tblLinkQuestion instance);
    partial void UpdatetblLinkQuestion(tblLinkQuestion instance);
    partial void DeletetblLinkQuestion(tblLinkQuestion instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::PetjeOp.Properties.Settings.Default.kbs2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAnswer> tblAnswers
		{
			get
			{
				return this.GetTable<tblAnswer>();
			}
		}
		
		public System.Data.Linq.Table<tblTeacher> tblTeachers
		{
			get
			{
				return this.GetTable<tblTeacher>();
			}
		}
		
		public System.Data.Linq.Table<tblLinkAnswer> tblLinkAnswers
		{
			get
			{
				return this.GetTable<tblLinkAnswer>();
			}
		}
		
		public System.Data.Linq.Table<tblLinkResult> tblLinkResults
		{
			get
			{
				return this.GetTable<tblLinkResult>();
			}
		}
		
		public System.Data.Linq.Table<tblQuestion> tblQuestions
		{
			get
			{
				return this.GetTable<tblQuestion>();
			}
		}
		
		public System.Data.Linq.Table<tblQuestionnaire> tblQuestionnaires
		{
			get
			{
				return this.GetTable<tblQuestionnaire>();
			}
		}
		
		public System.Data.Linq.Table<tblResult> tblResults
		{
			get
			{
				return this.GetTable<tblResult>();
			}
		}
		
		public System.Data.Linq.Table<tblStudent> tblStudents
		{
			get
			{
				return this.GetTable<tblStudent>();
			}
		}
		
		public System.Data.Linq.Table<tblExam> tblExams
		{
			get
			{
				return this.GetTable<tblExam>();
			}
		}
		
		public System.Data.Linq.Table<tblLinkQuestion> tblLinkQuestions
		{
			get
			{
				return this.GetTable<tblLinkQuestion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.answer")]
	public partial class tblAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answernr;
		
		private string _answer;
		
		private EntitySet<tblLinkAnswer> _tblLinkAnswers;
		
		private EntitySet<tblQuestion> _tblQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnanswernrChanging(int value);
    partial void OnanswernrChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    #endregion
		
		public tblAnswer()
		{
			this._tblLinkAnswers = new EntitySet<tblLinkAnswer>(new Action<tblLinkAnswer>(this.attach_tblLinkAnswers), new Action<tblLinkAnswer>(this.detach_tblLinkAnswers));
			this._tblQuestions = new EntitySet<tblQuestion>(new Action<tblQuestion>(this.attach_tblQuestions), new Action<tblQuestion>(this.detach_tblQuestions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answernr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answernr
		{
			get
			{
				return this._answernr;
			}
			set
			{
				if ((this._answernr != value))
				{
					this.OnanswernrChanging(value);
					this.SendPropertyChanging();
					this._answernr = value;
					this.SendPropertyChanged("answernr");
					this.OnanswernrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAnswer_tblLinkAnswer", Storage="_tblLinkAnswers", ThisKey="answernr", OtherKey="answernr")]
		public EntitySet<tblLinkAnswer> tblLinkAnswers
		{
			get
			{
				return this._tblLinkAnswers;
			}
			set
			{
				this._tblLinkAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAnswer_tblQuestion", Storage="_tblQuestions", ThisKey="answernr", OtherKey="correctanswernr")]
		public EntitySet<tblQuestion> tblQuestions
		{
			get
			{
				return this._tblQuestions;
			}
			set
			{
				this._tblQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLinkAnswers(tblLinkAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblAnswer = this;
		}
		
		private void detach_tblLinkAnswers(tblLinkAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblAnswer = null;
		}
		
		private void attach_tblQuestions(tblQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblAnswer = this;
		}
		
		private void detach_tblQuestions(tblQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblAnswer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.teacher")]
	public partial class tblTeacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _teachernr;
		
		private string _firstname;
		
		private string _name;
		
		private EntitySet<tblQuestionnaire> _tblQuestionnaires;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnteachernrChanging(string value);
    partial void OnteachernrChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public tblTeacher()
		{
			this._tblQuestionnaires = new EntitySet<tblQuestionnaire>(new Action<tblQuestionnaire>(this.attach_tblQuestionnaires), new Action<tblQuestionnaire>(this.detach_tblQuestionnaires));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teachernr", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string teachernr
		{
			get
			{
				return this._teachernr;
			}
			set
			{
				if ((this._teachernr != value))
				{
					this.OnteachernrChanging(value);
					this.SendPropertyChanging();
					this._teachernr = value;
					this.SendPropertyChanged("teachernr");
					this.OnteachernrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTeacher_tblQuestionnaire", Storage="_tblQuestionnaires", ThisKey="teachernr", OtherKey="teachernr")]
		public EntitySet<tblQuestionnaire> tblQuestionnaires
		{
			get
			{
				return this._tblQuestionnaires;
			}
			set
			{
				this._tblQuestionnaires.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblQuestionnaires(tblQuestionnaire entity)
		{
			this.SendPropertyChanging();
			entity.tblTeacher = this;
		}
		
		private void detach_tblQuestionnaires(tblQuestionnaire entity)
		{
			this.SendPropertyChanging();
			entity.tblTeacher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.linkanswer")]
	public partial class tblLinkAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _linkanswernr;
		
		private int _questionnr;
		
		private string _index;
		
		private int _answernr;
		
		private EntityRef<tblAnswer> _tblAnswer;
		
		private EntityRef<tblQuestion> _tblQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlinkanswernrChanging(int value);
    partial void OnlinkanswernrChanged();
    partial void OnquestionnrChanging(int value);
    partial void OnquestionnrChanged();
    partial void OnindexChanging(string value);
    partial void OnindexChanged();
    partial void OnanswernrChanging(int value);
    partial void OnanswernrChanged();
    #endregion
		
		public tblLinkAnswer()
		{
			this._tblAnswer = default(EntityRef<tblAnswer>);
			this._tblQuestion = default(EntityRef<tblQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkanswernr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int linkanswernr
		{
			get
			{
				return this._linkanswernr;
			}
			set
			{
				if ((this._linkanswernr != value))
				{
					this.OnlinkanswernrChanging(value);
					this.SendPropertyChanging();
					this._linkanswernr = value;
					this.SendPropertyChanged("linkanswernr");
					this.OnlinkanswernrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnr", DbType="Int NOT NULL")]
		public int questionnr
		{
			get
			{
				return this._questionnr;
			}
			set
			{
				if ((this._questionnr != value))
				{
					if (this._tblQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnquestionnrChanging(value);
					this.SendPropertyChanging();
					this._questionnr = value;
					this.SendPropertyChanged("questionnr");
					this.OnquestionnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[index]", Storage="_index", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string index
		{
			get
			{
				return this._index;
			}
			set
			{
				if ((this._index != value))
				{
					this.OnindexChanging(value);
					this.SendPropertyChanging();
					this._index = value;
					this.SendPropertyChanged("index");
					this.OnindexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answernr", DbType="Int NOT NULL")]
		public int answernr
		{
			get
			{
				return this._answernr;
			}
			set
			{
				if ((this._answernr != value))
				{
					if (this._tblAnswer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnanswernrChanging(value);
					this.SendPropertyChanging();
					this._answernr = value;
					this.SendPropertyChanged("answernr");
					this.OnanswernrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAnswer_tblLinkAnswer", Storage="_tblAnswer", ThisKey="answernr", OtherKey="answernr", IsForeignKey=true)]
		public tblAnswer tblAnswer
		{
			get
			{
				return this._tblAnswer.Entity;
			}
			set
			{
				tblAnswer previousValue = this._tblAnswer.Entity;
				if (((previousValue != value) 
							|| (this._tblAnswer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAnswer.Entity = null;
						previousValue.tblLinkAnswers.Remove(this);
					}
					this._tblAnswer.Entity = value;
					if ((value != null))
					{
						value.tblLinkAnswers.Add(this);
						this._answernr = value.answernr;
					}
					else
					{
						this._answernr = default(int);
					}
					this.SendPropertyChanged("tblAnswer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_tblLinkAnswer", Storage="_tblQuestion", ThisKey="questionnr", OtherKey="questionnr", IsForeignKey=true)]
		public tblQuestion tblQuestion
		{
			get
			{
				return this._tblQuestion.Entity;
			}
			set
			{
				tblQuestion previousValue = this._tblQuestion.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestion.Entity = null;
						previousValue.tblLinkAnswers.Remove(this);
					}
					this._tblQuestion.Entity = value;
					if ((value != null))
					{
						value.tblLinkAnswers.Add(this);
						this._questionnr = value.questionnr;
					}
					else
					{
						this._questionnr = default(int);
					}
					this.SendPropertyChanged("tblQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.linkresult")]
	public partial class tblLinkResult
	{
		
		private int _resultnr;
		
		private int _linkanswernr;
		
		private int _studentnr;
		
		public tblLinkResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultnr", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int resultnr
		{
			get
			{
				return this._resultnr;
			}
			set
			{
				if ((this._resultnr != value))
				{
					this._resultnr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkanswernr", DbType="Int NOT NULL")]
		public int linkanswernr
		{
			get
			{
				return this._linkanswernr;
			}
			set
			{
				if ((this._linkanswernr != value))
				{
					this._linkanswernr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentnr", DbType="Int NOT NULL")]
		public int studentnr
		{
			get
			{
				return this._studentnr;
			}
			set
			{
				if ((this._studentnr != value))
				{
					this._studentnr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.question")]
	public partial class tblQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _questionnr;
		
		private string _question;
		
		private int _correctanswernr;
		
		private EntitySet<tblLinkAnswer> _tblLinkAnswers;
		
		private EntitySet<tblLinkQuestion> _tblLinkQuestions;
		
		private EntityRef<tblAnswer> _tblAnswer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnquestionnrChanging(int value);
    partial void OnquestionnrChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OncorrectanswernrChanging(int value);
    partial void OncorrectanswernrChanged();
    #endregion
		
		public tblQuestion()
		{
			this._tblLinkAnswers = new EntitySet<tblLinkAnswer>(new Action<tblLinkAnswer>(this.attach_tblLinkAnswers), new Action<tblLinkAnswer>(this.detach_tblLinkAnswers));
			this._tblLinkQuestions = new EntitySet<tblLinkQuestion>(new Action<tblLinkQuestion>(this.attach_tblLinkQuestions), new Action<tblLinkQuestion>(this.detach_tblLinkQuestions));
			this._tblAnswer = default(EntityRef<tblAnswer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int questionnr
		{
			get
			{
				return this._questionnr;
			}
			set
			{
				if ((this._questionnr != value))
				{
					this.OnquestionnrChanging(value);
					this.SendPropertyChanging();
					this._questionnr = value;
					this.SendPropertyChanged("questionnr");
					this.OnquestionnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correctanswernr", DbType="Int NOT NULL")]
		public int correctanswernr
		{
			get
			{
				return this._correctanswernr;
			}
			set
			{
				if ((this._correctanswernr != value))
				{
					if (this._tblAnswer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncorrectanswernrChanging(value);
					this.SendPropertyChanging();
					this._correctanswernr = value;
					this.SendPropertyChanged("correctanswernr");
					this.OncorrectanswernrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_tblLinkAnswer", Storage="_tblLinkAnswers", ThisKey="questionnr", OtherKey="questionnr")]
		public EntitySet<tblLinkAnswer> tblLinkAnswers
		{
			get
			{
				return this._tblLinkAnswers;
			}
			set
			{
				this._tblLinkAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_linkquestion", Storage="_tblLinkQuestions", ThisKey="questionnr", OtherKey="questionnr")]
		public EntitySet<tblLinkQuestion> tblLinkQuestions
		{
			get
			{
				return this._tblLinkQuestions;
			}
			set
			{
				this._tblLinkQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAnswer_tblQuestion", Storage="_tblAnswer", ThisKey="correctanswernr", OtherKey="answernr", IsForeignKey=true)]
		public tblAnswer tblAnswer
		{
			get
			{
				return this._tblAnswer.Entity;
			}
			set
			{
				tblAnswer previousValue = this._tblAnswer.Entity;
				if (((previousValue != value) 
							|| (this._tblAnswer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAnswer.Entity = null;
						previousValue.tblQuestions.Remove(this);
					}
					this._tblAnswer.Entity = value;
					if ((value != null))
					{
						value.tblQuestions.Add(this);
						this._correctanswernr = value.answernr;
					}
					else
					{
						this._correctanswernr = default(int);
					}
					this.SendPropertyChanged("tblAnswer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLinkAnswers(tblLinkAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = this;
		}
		
		private void detach_tblLinkAnswers(tblLinkAnswer entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = null;
		}
		
		private void attach_tblLinkQuestions(tblLinkQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = this;
		}
		
		private void detach_tblLinkQuestions(tblLinkQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.questionnaire")]
	public partial class tblQuestionnaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _questionnairenr;
		
		private string _questionnairename;
		
		private string _teachernr;
		
		private EntitySet<tblExam> _tblExams;
		
		private EntitySet<tblLinkQuestion> _tblLinkQuestions;
		
		private EntityRef<tblTeacher> _tblTeacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnquestionnairenrChanging(int value);
    partial void OnquestionnairenrChanged();
    partial void OnquestionnairenameChanging(string value);
    partial void OnquestionnairenameChanged();
    partial void OnteachernrChanging(string value);
    partial void OnteachernrChanged();
    #endregion
		
		public tblQuestionnaire()
		{
			this._tblExams = new EntitySet<tblExam>(new Action<tblExam>(this.attach_tblExams), new Action<tblExam>(this.detach_tblExams));
			this._tblLinkQuestions = new EntitySet<tblLinkQuestion>(new Action<tblLinkQuestion>(this.attach_tblLinkQuestions), new Action<tblLinkQuestion>(this.detach_tblLinkQuestions));
			this._tblTeacher = default(EntityRef<tblTeacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnairenr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int questionnairenr
		{
			get
			{
				return this._questionnairenr;
			}
			set
			{
				if ((this._questionnairenr != value))
				{
					this.OnquestionnairenrChanging(value);
					this.SendPropertyChanging();
					this._questionnairenr = value;
					this.SendPropertyChanged("questionnairenr");
					this.OnquestionnairenrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnairename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string questionnairename
		{
			get
			{
				return this._questionnairename;
			}
			set
			{
				if ((this._questionnairename != value))
				{
					this.OnquestionnairenameChanging(value);
					this.SendPropertyChanging();
					this._questionnairename = value;
					this.SendPropertyChanged("questionnairename");
					this.OnquestionnairenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teachernr", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string teachernr
		{
			get
			{
				return this._teachernr;
			}
			set
			{
				if ((this._teachernr != value))
				{
					if (this._tblTeacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnteachernrChanging(value);
					this.SendPropertyChanging();
					this._teachernr = value;
					this.SendPropertyChanged("teachernr");
					this.OnteachernrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionnaire_tblExam", Storage="_tblExams", ThisKey="questionnairenr", OtherKey="questionnairenr")]
		public EntitySet<tblExam> tblExams
		{
			get
			{
				return this._tblExams;
			}
			set
			{
				this._tblExams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionnaire_linkquestion", Storage="_tblLinkQuestions", ThisKey="questionnairenr", OtherKey="questionnairenr")]
		public EntitySet<tblLinkQuestion> tblLinkQuestions
		{
			get
			{
				return this._tblLinkQuestions;
			}
			set
			{
				this._tblLinkQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblTeacher_tblQuestionnaire", Storage="_tblTeacher", ThisKey="teachernr", OtherKey="teachernr", IsForeignKey=true)]
		public tblTeacher tblTeacher
		{
			get
			{
				return this._tblTeacher.Entity;
			}
			set
			{
				tblTeacher previousValue = this._tblTeacher.Entity;
				if (((previousValue != value) 
							|| (this._tblTeacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblTeacher.Entity = null;
						previousValue.tblQuestionnaires.Remove(this);
					}
					this._tblTeacher.Entity = value;
					if ((value != null))
					{
						value.tblQuestionnaires.Add(this);
						this._teachernr = value.teachernr;
					}
					else
					{
						this._teachernr = default(string);
					}
					this.SendPropertyChanged("tblTeacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblExams(tblExam entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionnaire = this;
		}
		
		private void detach_tblExams(tblExam entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionnaire = null;
		}
		
		private void attach_tblLinkQuestions(tblLinkQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionnaire = this;
		}
		
		private void detach_tblLinkQuestions(tblLinkQuestion entity)
		{
			this.SendPropertyChanging();
			entity.tblQuestionnaire = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.result")]
	public partial class tblResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _resultnr;
		
		private int _examnr;
		
		private EntityRef<tblExam> _tblExam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnresultnrChanging(int value);
    partial void OnresultnrChanged();
    partial void OnexamnrChanging(int value);
    partial void OnexamnrChanged();
    #endregion
		
		public tblResult()
		{
			this._tblExam = default(EntityRef<tblExam>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resultnr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int resultnr
		{
			get
			{
				return this._resultnr;
			}
			set
			{
				if ((this._resultnr != value))
				{
					this.OnresultnrChanging(value);
					this.SendPropertyChanging();
					this._resultnr = value;
					this.SendPropertyChanged("resultnr");
					this.OnresultnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_examnr", DbType="Int NOT NULL")]
		public int examnr
		{
			get
			{
				return this._examnr;
			}
			set
			{
				if ((this._examnr != value))
				{
					if (this._tblExam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnexamnrChanging(value);
					this.SendPropertyChanging();
					this._examnr = value;
					this.SendPropertyChanged("examnr");
					this.OnexamnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblExam_tblResult", Storage="_tblExam", ThisKey="examnr", OtherKey="examnr", IsForeignKey=true)]
		public tblExam tblExam
		{
			get
			{
				return this._tblExam.Entity;
			}
			set
			{
				tblExam previousValue = this._tblExam.Entity;
				if (((previousValue != value) 
							|| (this._tblExam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblExam.Entity = null;
						previousValue.tblResults.Remove(this);
					}
					this._tblExam.Entity = value;
					if ((value != null))
					{
						value.tblResults.Add(this);
						this._examnr = value.examnr;
					}
					else
					{
						this._examnr = default(int);
					}
					this.SendPropertyChanged("tblExam");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.student")]
	public partial class tblStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _studentnr;
		
		private string _firstname;
		
		private string _name;
		
		private string _groupnr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudentnrChanging(int value);
    partial void OnstudentnrChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OngroupnrChanging(string value);
    partial void OngroupnrChanged();
    #endregion
		
		public tblStudent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentnr", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int studentnr
		{
			get
			{
				return this._studentnr;
			}
			set
			{
				if ((this._studentnr != value))
				{
					this.OnstudentnrChanging(value);
					this.SendPropertyChanging();
					this._studentnr = value;
					this.SendPropertyChanged("studentnr");
					this.OnstudentnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupnr", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string groupnr
		{
			get
			{
				return this._groupnr;
			}
			set
			{
				if ((this._groupnr != value))
				{
					this.OngroupnrChanging(value);
					this.SendPropertyChanging();
					this._groupnr = value;
					this.SendPropertyChanged("groupnr");
					this.OngroupnrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.exam")]
	public partial class tblExam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _examnr;
		
		private int _questionnairenr;
		
		private System.DateTime _starttime;
		
		private System.DateTime _endtime;
		
		private string _groupnr;
		
		private EntitySet<tblResult> _tblResults;
		
		private EntityRef<tblQuestionnaire> _tblQuestionnaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnexamnrChanging(int value);
    partial void OnexamnrChanged();
    partial void OnquestionnairenrChanging(int value);
    partial void OnquestionnairenrChanged();
    partial void OnstarttimeChanging(System.DateTime value);
    partial void OnstarttimeChanged();
    partial void OnendtimeChanging(System.DateTime value);
    partial void OnendtimeChanged();
    partial void OngroupnrChanging(string value);
    partial void OngroupnrChanged();
    #endregion
		
		public tblExam()
		{
			this._tblResults = new EntitySet<tblResult>(new Action<tblResult>(this.attach_tblResults), new Action<tblResult>(this.detach_tblResults));
			this._tblQuestionnaire = default(EntityRef<tblQuestionnaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_examnr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int examnr
		{
			get
			{
				return this._examnr;
			}
			set
			{
				if ((this._examnr != value))
				{
					this.OnexamnrChanging(value);
					this.SendPropertyChanging();
					this._examnr = value;
					this.SendPropertyChanged("examnr");
					this.OnexamnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnairenr", DbType="Int NOT NULL")]
		public int questionnairenr
		{
			get
			{
				return this._questionnairenr;
			}
			set
			{
				if ((this._questionnairenr != value))
				{
					if (this._tblQuestionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnquestionnairenrChanging(value);
					this.SendPropertyChanging();
					this._questionnairenr = value;
					this.SendPropertyChanged("questionnairenr");
					this.OnquestionnairenrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starttime", DbType="DateTime2 NOT NULL")]
		public System.DateTime starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if ((this._starttime != value))
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endtime", DbType="DateTime2 NOT NULL")]
		public System.DateTime endtime
		{
			get
			{
				return this._endtime;
			}
			set
			{
				if ((this._endtime != value))
				{
					this.OnendtimeChanging(value);
					this.SendPropertyChanging();
					this._endtime = value;
					this.SendPropertyChanged("endtime");
					this.OnendtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupnr", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string groupnr
		{
			get
			{
				return this._groupnr;
			}
			set
			{
				if ((this._groupnr != value))
				{
					this.OngroupnrChanging(value);
					this.SendPropertyChanging();
					this._groupnr = value;
					this.SendPropertyChanged("groupnr");
					this.OngroupnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblExam_tblResult", Storage="_tblResults", ThisKey="examnr", OtherKey="examnr")]
		public EntitySet<tblResult> tblResults
		{
			get
			{
				return this._tblResults;
			}
			set
			{
				this._tblResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionnaire_tblExam", Storage="_tblQuestionnaire", ThisKey="questionnairenr", OtherKey="questionnairenr", IsForeignKey=true)]
		public tblQuestionnaire tblQuestionnaire
		{
			get
			{
				return this._tblQuestionnaire.Entity;
			}
			set
			{
				tblQuestionnaire previousValue = this._tblQuestionnaire.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestionnaire.Entity = null;
						previousValue.tblExams.Remove(this);
					}
					this._tblQuestionnaire.Entity = value;
					if ((value != null))
					{
						value.tblExams.Add(this);
						this._questionnairenr = value.questionnairenr;
					}
					else
					{
						this._questionnairenr = default(int);
					}
					this.SendPropertyChanged("tblQuestionnaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblResults(tblResult entity)
		{
			this.SendPropertyChanging();
			entity.tblExam = this;
		}
		
		private void detach_tblResults(tblResult entity)
		{
			this.SendPropertyChanging();
			entity.tblExam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.linkquestion")]
	public partial class tblLinkQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _questionnairenr;
		
		private int _questionnr;
		
		private int _linkquestionnr;
		
		private EntityRef<tblQuestionnaire> _tblQuestionnaire;
		
		private EntityRef<tblQuestion> _tblQuestion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnquestionnairenrChanging(int value);
    partial void OnquestionnairenrChanged();
    partial void OnquestionnrChanging(int value);
    partial void OnquestionnrChanged();
    partial void OnlinkquestionnrChanging(int value);
    partial void OnlinkquestionnrChanged();
    #endregion
		
		public tblLinkQuestion()
		{
			this._tblQuestionnaire = default(EntityRef<tblQuestionnaire>);
			this._tblQuestion = default(EntityRef<tblQuestion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnairenr", DbType="Int NOT NULL")]
		public int questionnairenr
		{
			get
			{
				return this._questionnairenr;
			}
			set
			{
				if ((this._questionnairenr != value))
				{
					if (this._tblQuestionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnquestionnairenrChanging(value);
					this.SendPropertyChanging();
					this._questionnairenr = value;
					this.SendPropertyChanged("questionnairenr");
					this.OnquestionnairenrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questionnr", DbType="Int NOT NULL")]
		public int questionnr
		{
			get
			{
				return this._questionnr;
			}
			set
			{
				if ((this._questionnr != value))
				{
					if (this._tblQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnquestionnrChanging(value);
					this.SendPropertyChanging();
					this._questionnr = value;
					this.SendPropertyChanged("questionnr");
					this.OnquestionnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkquestionnr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int linkquestionnr
		{
			get
			{
				return this._linkquestionnr;
			}
			set
			{
				if ((this._linkquestionnr != value))
				{
					this.OnlinkquestionnrChanging(value);
					this.SendPropertyChanging();
					this._linkquestionnr = value;
					this.SendPropertyChanged("linkquestionnr");
					this.OnlinkquestionnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestionnaire_linkquestion", Storage="_tblQuestionnaire", ThisKey="questionnairenr", OtherKey="questionnairenr", IsForeignKey=true)]
		public tblQuestionnaire tblQuestionnaire
		{
			get
			{
				return this._tblQuestionnaire.Entity;
			}
			set
			{
				tblQuestionnaire previousValue = this._tblQuestionnaire.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestionnaire.Entity = null;
						previousValue.tblLinkQuestions.Remove(this);
					}
					this._tblQuestionnaire.Entity = value;
					if ((value != null))
					{
						value.tblLinkQuestions.Add(this);
						this._questionnairenr = value.questionnairenr;
					}
					else
					{
						this._questionnairenr = default(int);
					}
					this.SendPropertyChanged("tblQuestionnaire");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQuestion_linkquestion", Storage="_tblQuestion", ThisKey="questionnr", OtherKey="questionnr", IsForeignKey=true)]
		public tblQuestion tblQuestion
		{
			get
			{
				return this._tblQuestion.Entity;
			}
			set
			{
				tblQuestion previousValue = this._tblQuestion.Entity;
				if (((previousValue != value) 
							|| (this._tblQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQuestion.Entity = null;
						previousValue.tblLinkQuestions.Remove(this);
					}
					this._tblQuestion.Entity = value;
					if ((value != null))
					{
						value.tblLinkQuestions.Add(this);
						this._questionnr = value.questionnr;
					}
					else
					{
						this._questionnr = default(int);
					}
					this.SendPropertyChanged("tblQuestion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
